{
    "identifier": "subarray_product_less_than_k",
    "prompts": [
        {
            "prompt_id": "29",
            "prompt": "Given an array of positive integers nums, and an integer k, return the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than k.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "nums": "[10,5,2,6]",
                        "k": "100"
                    },
                    "expected_output": [
                        "8"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "num_subarray_product_less_than_k",
        "parameters": [
            {
                "name": "nums",
                "type": "List[int]"
            },
            {
                "name": "k",
                "type": "int"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "nums": "[10,5,2,6]",
                "k": "100"
            },
            "expected_output": [
                "8"
            ]
        }
    ],
    "optimal_solution": "def num_subarray_product_less_than_k(nums: list[int], k: int) -> int:\n    if not nums or k <= 1:\n        return 0\n\n    prod = 1\n    left = 0\n    result = 0\n\n    for right in range(len(nums)):\n        prod *= nums[right]\n        while prod >= k:\n            prod /= nums[left]\n            left += 1\n        result += right - left + 1\n\n    return result"
}