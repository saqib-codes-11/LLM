{
    "identifier": "meeting_rooms_ii",
    "prompts": [
        {
            "prompt_id": "61",
            "prompt": "Given an array of meeting time intervals consisting of start and end times, find the minimum number of conference rooms required.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "intervals": "[[0,30],[5,10],[15,20]]"
                    },
                    "expected_output": [
                        "2"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "min_meeting_rooms",
        "parameters": [
            {
                "name": "intervals",
                "type": "List[List[int]]"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "intervals": "[[0,30],[5,10],[15,20]]"
            },
            "expected_output": [
                "2"
            ]
        },
        {
            "input": {
                "intervals": "[[7,10],[2,4]]"
            },
            "expected_output": [
                "1"
            ]
        }
    ],
    "optimal_solution": "import heapq\n\ndef min_meeting_rooms(intervals: List[List[int]]) -> int:\n    if not intervals:\n        return 0\n\n    intervals.sort(key=lambda x: x[0])\n    rooms = []\n\n    heapq.heappush(rooms, intervals[0][1])\n\n    for i in range(1, len(intervals)):\n        if rooms[0] <= intervals[i][0]:\n            heapq.heappop(rooms)\n\n        heapq.heappush(rooms, intervals[i][1])\n\n    return len(rooms)"
}