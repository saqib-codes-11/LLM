{
    "identifier": "find_duplicate_number",
    "prompts": [
        {
            "prompt_id": "find_duplicate_number_1",
            "prompt": "You are given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive). Assume that there is only one duplicate number and find the duplicate one.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "nums": "[1,3,4,2,2]"
                    },
                    "expected_output": [
                        "2"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "find_duplicate",
        "parameters": [
            {
                "name": "nums",
                "type": "List[int]"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "nums": "[1,3,4,2,2]"
            },
            "expected_output": [
                "2"
            ]
        },
        {
            "input": {
                "nums": "[3,1,3,4,2]"
            },
            "expected_output": [
                "3"
            ]
        }
    ],
    "optimal_solution": "\ndef find_duplicate(nums):\n    slow, fast = nums[0], nums[nums[0]]\n    while slow != fast:\n        slow = nums[slow]\n        fast = nums[nums[fast]]\n    \n    fast = 0\n    while slow != fast:\n        slow = nums[slow]\n        fast = nums[fast]\n    return slow\n"
}
