{
    "identifier": "min_remove_valid_parentheses",
    "prompts": [
        {
            "prompt_id": "33",
            "prompt": "Given a string s of '(' , ')' and lowercase English characters. Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "s": "lee(t(c)o)de)"
                    },
                    "expected_output": [
                        "\"lee(t(c)o)de\""
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "min_remove_to_make_valid",
        "parameters": [
            {
                "name": "s",
                "type": "str"
            }
        ],
        "return_values": [
            {
                "type": "str"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "s": "lee(t(c)o)de)"
            },
            "expected_output": [
                "\"lee(t(c)o)de\""
            ]
        },
        {
            "input": {
                "s": "a)b(c)d"
            },
            "expected_output": [
                "\"ab(c)d\""
            ]
        },
        {
            "input": {
                "s": "))(("
            },
            "expected_output": [
                "\"\""
            ]
        }
    ],
    "optimal_solution": "def min_remove_to_make_valid(s: str) -> str:\n    s = list(s)\n    stack = []\n    for i, char in enumerate(s):\n        if char == '(':\n            stack.append(i)\n        elif char == ')':\n            if stack:\n                stack.pop()\n            else:\n                s[i] = ''\n    while stack:\n        s[stack.pop()] = ''\n    return ''.join(s)"
}