{
    "identifier": "valid_triangle_number",
    "prompts": [
        {
            "prompt_id": "33",
            "prompt": "Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "nums": "[2,2,3,4]"
                    },
                    "expected_output": [
                        "3"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "triangle_number",
        "parameters": [
            {
                "name": "nums",
                "type": "List[int]"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "nums": "[2,2,3,4]"
            },
            "expected_output": [
                "3"
            ]
        },
        {
            "input": {
                "nums": "[4,2,3,4]"
            },
            "expected_output": [
                "4"
            ]
        }
    ],
    "optimal_solution": "def triangle_number(nums: list[int]) -> int:\n    nums.sort()\n    count, n = 0, len(nums)\n\n    for i in range(n - 1, 1, -1):\n        left, right = 0, i - 1\n        while left < right:\n            if nums[left] + nums[right] > nums[i]:\n                count += (right - left)\n                right -= 1\n            else:\n                left += 1\n\n    return count"
}