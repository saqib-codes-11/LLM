{
    "identifier": "find_min_rotated_sorted",
    "prompts": [
        {
            "prompt_id": "31",
            "prompt": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. Find the minimum element.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "nums": "[3,4,5,1,2]"
                    },
                    "expected_output": [
                        "1"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "find_min",
        "parameters": [
            {
                "name": "nums",
                "type": "List[int]"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "nums": "[3,4,5,1,2]"
            },
            "expected_output": [
                "1"
            ]
        },
        {
            "input": {
                "nums": "[4,5,6,7,0,1,2]"
            },
            "expected_output": [
                "0"
            ]
        }
    ],
    "optimal_solution": "def find_min(nums: list[int]) -> int:\n    left, right = 0, len(nums) - 1\n    while left < right:\n        mid = (left + right) // 2\n        if nums[mid] > nums[right]:\n            left = mid + 1\n        else:\n            right = mid\n    return nums[left]"
}