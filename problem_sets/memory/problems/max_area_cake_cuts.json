{
    "identifier": "max_area_cake_cuts",
    "prompts": [
        {
            "prompt_id": "28",
            "prompt": "Given a rectangular cake with height h and width w, and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut. Return the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays horizontalCuts and verticalCuts.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "h": "5",
                        "w": "4",
                        "horizontalCuts": "[1,2,4]",
                        "verticalCuts": "[1,3]"
                    },
                    "expected_output": [
                        "4"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "max_area",
        "parameters": [
            {
                "name": "h",
                "type": "int"
            },
            {
                "name": "w",
                "type": "int"
            },
            {
                "name": "horizontalCuts",
                "type": "List[int]"
            },
            {
                "name": "verticalCuts",
                "type": "List[int]"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "h": "5",
                "w": "4",
                "horizontalCuts": "[1,2,4]",
                "verticalCuts": "[1,3]"
            },
            "expected_output": [
                "4"
            ]
        },
        {
            "input": {
                "h": "5",
                "w": "4",
                "horizontalCuts": "[3,1]",
                "verticalCuts": "[1]"
            },
            "expected_output": [
                "6"
            ]
        }
    ],
    "optimal_solution": "def max_area(h: int, w: int, horizontalCuts: list[int], verticalCuts: list[int]) -> int:\n    horizontalCuts.sort()\n    verticalCuts.sort()\n    max_height = max(horizontalCuts[0], h - horizontalCuts[-1])\n    max_width = max(verticalCuts[0], w - verticalCuts[-1])\n    \n    for i in range(1, len(horizontalCuts)):\n        max_height = max(max_height, horizontalCuts[i] - horizontalCuts[i-1])\n        \n    for i in range(1, len(verticalCuts)):\n        max_width = max(max_width, verticalCuts[i] - verticalCuts[i-1])\n        \n    return (max_height * max_width) % (10**9 + 7)"
}