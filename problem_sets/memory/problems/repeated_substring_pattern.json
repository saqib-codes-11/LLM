{
    "identifier": "repeated_substring_pattern",
    "prompts": [
        {
            "prompt_id": "32",
            "prompt": "Given a non-empty string, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "s": "abab"
                    },
                    "expected_output": [
                        "True"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "repeated_substring_pattern",
        "parameters": [
            {
                "name": "s",
                "type": "str"
            }
        ],
        "return_values": [
            {
                "type": "bool"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "s": "abab"
            },
            "expected_output": [
                "True"
            ]
        },
        {
            "input": {
                "s": "aba"
            },
            "expected_output": [
                "False"
            ]
        },
        {
            "input": {
                "s": "abcabcabcabc"
            },
            "expected_output": [
                "True"
            ]
        }
    ],
    "optimal_solution": "def repeated_substring_pattern(s: str) -> bool:\n    n = len(s)\n    for i in range(1, n // 2 + 1):\n        if n % i == 0:\n            if s[:i] * (n // i) == s:\n                return True\n    return False"
}