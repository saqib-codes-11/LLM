{
    "identifier": "longest_palindromic_substring",
    "prompts": [
        {
            "prompt_id": "27",
            "prompt": "Given a string s, return the longest palindromic substring in s.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "s": "babad"
                    },
                    "expected_output": [
                        "bab"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "longest_palindromic_substring",
        "parameters": [
            {
                "name": "s",
                "type": "str"
            }
        ],
        "return_values": [
            {
                "type": "str"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "s": "babad"
            },
            "expected_output": [
                "bab"
            ]
        },
        {
            "input": {
                "s": "cbbd"
            },
            "expected_output": [
                "bb"
            ]
        },
        {
            "input": {
                "s": "a"
            },
            "expected_output": [
                "a"
            ]
        },
        {
            "input": {
                "s": "ac"
            },
            "expected_output": [
                "a"
            ]
        }
    ],
    "optimal_solution": "def longest_palindromic_substring(s: str) -> str:\n    def expand_around_center(left, right):\n        while left >= 0 and right < len(s) and s[left] == s[right]:\n            left -= 1\n            right += 1\n        return s[left+1:right]\n\n    if len(s) == 0:\n        return \"\"\n    longest = s[0]\n    for i in range(len(s)):\n        # Odd length palindromes\n        p1 = expand_around_center(i, i)\n        if len(p1) > len(longest):\n            longest = p1\n\n        # Even length palindromes\n        p2 = expand_around_center(i, i+1)\n        if len(p2) > len(longest):\n            longest = p2\n\n    return longest"
}