{
    "identifier": "branch36",
    "description": "branch36",
    "prompts": [
        {
            "prompt_id": "prompt",
            "prompt": "Generate tests in Python (compatible with pytest) that produce 100% code coverage. Output only Python code and nothing else before or after.",
            "input_code": "def branch36(num1, num2):\n    # Initialize the return value\n    result = 0\n\n    # Check if the numbers equal each other\n    if num1 == num2:\n        result = 1\n    # Check if the first number is greater than the second\n    elif num1 > num2:\n        result = 2\n    # Check if the first number is less than the second\n    elif num1 < num2:\n        result = 3\n    # Check if either number is 0\n    elif num1 == 0 or num2 == 0:\n        result = 4\n    # Check if both numbers are equal to 0\n    elif num1 == 0 and num2 == 0:\n        result = 5\n    # Check if either number is negative\n    elif num1 < 0 or num2 < 0:\n        result = 6\n    # Check if both numbers are equal to 1\n    elif num1 == 1 and num2 == 1:\n        result = 7\n    # Check if both numbers are divisible by 3\n    elif num1 % 3 == 0 and num2 % 3 == 0:\n        result = 8\n    # Check if either number is divisible by 5\n    elif num1 % 5 == 0 or num2 % 5 == 0:\n        result = 9\n    # Check if either number is divisible by 7\n    elif num1 % 7 == 0 or num2 % 7 == 0:\n        result = 10\n    # Check if the sum of the two numbers is divisible by 7\n    elif (num1 + num2) % 7 == 0:\n        result = 11\n    # Otherwise, return 0\n    else:\n        result = 0\n\n    # Return the result\n    return result"
        }
    ],
    "tags": [
        "Code Coverage"
    ],
    "function_prototype": {
        "function_name": "branch36",
        "parameters": [
            {
                "name": "num1",
                "type": "int"
            },
            {
                "name": "num2",
                "type": "int"
            }
        ],
        "return_values": [
            {
                "type": "int"
            }
        ]
    }
}